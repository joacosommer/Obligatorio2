/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUI;

import Dominio.*;
import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
import java.util.ArrayList;
import java.util.*;
import javax.swing.JList;

/**
 *
 * @author Joaquin
 */
public class Tablero2 extends javax.swing.JFrame {

    private JButton[][] botones;
    private Sistema sistema;
    private Tablero tablero;
    private Partida unaP;
    private int movi;
    Validaciones1 validaciones = new Validaciones1();
    private ArrayList<int[]> mov = new ArrayList<int[]>();

    public Tablero2(Partida unaP, int movi, Tablero tablero, Sistema sistema) {
        initComponents();
        this.setSistema(sistema);
        this.setMovi(movi);
        this.setTablero(tablero);
        this.setUnaP(unaP);

        panelJuego.setLayout(new GridLayout(8, 9));
        botones = new JButton[9][10];

        jLabel6.setText(unaP.getJugadorAzul().getAlias());
        jLabel8.setText(unaP.getJugadorRojo().getAlias());
        jLabel1.setVisible(false);
        for (int i = 1; i <= 8; i++) {
            for (int j = 1; j <= 9; j++) {
                JButton jButton = new JButton();
                jButton.addActionListener(new ListenerBoton(i, j));
                panelJuego.add(jButton);
                botones[i][j] = jButton;
                botones[i][j].setMargin(new Insets(8, 8, 8, 8));
                if (tablero.getTablero()[i - 1][j - 1].getColor() == "Rojo") {
                    botones[i][j].setBackground(Color.RED);
                } else if (tablero.getTablero()[i - 1][j - 1].getColor() == "Azul") {
                    botones[i][j].setBackground(Color.BLUE);
                } else {
                    botones[i][j].setBackground(Color.GRAY);
                }
                if (tablero.getTablero()[i - 1][j - 1].getValor() != 0) {
                    jButton.setText(Integer.toString(tablero.getTablero()[i - 1][j - 1].getValor()));
                }
            }
        }

        DefaultListModel<String> model = new DefaultListModel<>();
        for (int i = 0; i < sistema.piezasRojo().size(); i++) {
            model.addElement(Integer.toString(sistema.piezasRojo().get(i).getValor()));
        }
        jList1.setModel(model);

    }

    public Tablero getTablero() {
        return tablero;
    }

    public void setTablero(Tablero tablero) {
        this.tablero = tablero;
    }

    public Partida getUnaP() {
        return unaP;
    }

    public void setUnaP(Partida unaP) {
        this.unaP = unaP;
    }

    public int getMovi() {
        return movi;
    }

    public void setMovi(int movi) {
        this.movi = movi;
    }

    public Sistema getSistema() {
        return sistema;
    }

    public void setSistema(Sistema unSistema) {
        this.sistema = unSistema;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelJuego = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 490));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(null);

        panelJuego.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(panelJuego);
        panelJuego.setBounds(0, 0, 490, 460);

        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Jugador Azul:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("TURNO AZUL");

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Jugador Rojo:");

        jLabel5.setText("Jugadas Posibles:");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("jugadorAzul");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("TURNO ROJO");

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("jugadorRojo");

        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Abandonar");

        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("Abandonar");

        jButton3.setText("Pasar turno");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel7)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 25, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1)
                                            .addComponent(jButton2))
                                        .addGap(82, 82, 82))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jButton3)))
                                        .addGap(21, 21, 21)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(488, 0, 212, 460);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelJuego;
    // End of variables declaration//GEN-END:variables

    private class ListenerBoton implements ActionListener {

        private int x;
        private int y;

        public ListenerBoton(int i, int j) {
// en el constructor se almacena la fila y columna que se presionó
            x = i;
            y = j;
        }

        public void actionPerformed(ActionEvent e) {
// cuando se presiona un botón, se ejecutará este método
            clickBoton(x, y);
        }
    }

    private void clickBoton(int fila, int columna) {
// Método a completar!.
// En fila y columna se reciben las coordenas donde presionó el usuario, relativas al comienzo de la grilla
// fila 1 y columna 1 corresponden a la posición de arriba a la izquierda.
// Debe indicarse cómo responder al click de ese botón.

        //while (!sistema.terminaPartida(unaP, movi, tablero.getTablero())
        //      && !sistema.todasOpuesto(tablero.getTablero())) {
        //jugadaRoja(fila, columna);
        //}
        int[] pos = new int[2];
        pos[0] = fila - 1;
        pos[1] = columna - 1;
        //if (turnoRojo(listaJugadas, tablero, movi)) {
        //if (tablero.getTablero()[pos[0]][pos[1]].getValor() != 0) {
            mov.add(new int[]{pos[0], pos[1]});
        //}
        if (mov.size()>1 && devolverPieza(mov.get(mov.size() - 1)) != devolverPieza(mov.get(mov.size() - 2)) && !(devolverPieza(mov.get(mov.size() - 1)).getValor()==0)) {
            if (jugada(mov.get(mov.size() - 1), pos) == "NO") {
                Error error = new Error();
                error.setVisible(true);
            } else {
                if (tablero.getTablero()[pos[0]][pos[1]].getValor() == 0 && mov.size() > 0) {
                    Pieza p = tablero.getTablero()[mov.get(mov.size() - 1)[0]][mov.get(mov.size() - 1)[1]];
                    tablero.getTablero()[pos[0]][pos[1]] = p;
                    Pieza q = new Pieza();
                    tablero.getTablero()[mov.get(mov.size() - 1)[0]][mov.get(mov.size() - 1)[1]] = q;
                    mov.clear();
                }

            }
        }

        refresh();

        DefaultListModel<String> model = new DefaultListModel<>();
        for (int i = 0; i < mov.size(); i++) {
            model.addElement(Integer.toString(mov.get(i)[0]) + " - " + Integer.toString(mov.get(i)[1]));
        }
        jList1.setModel(model);
        

    }
    
    public Pieza devolverPieza(int[] pos){
        Pieza p = new Pieza();
        p = tablero.getTablero()[pos[0]][pos[1]];
        return p;
    }
            
    public void jugadaRoja(int fila, int columna) {
        tablero.getTablero()[5][5].setColor("Rojo");
        tablero.getTablero()[5][5].setValor(8);
        Tablero2 ventanaTablero = new Tablero2(unaP, movi, tablero, sistema);
        ventanaTablero.setVisible(true);
    }

    public void refresh() {
        for (int i = 1; i <= 8; i++) {
            for (int j = 1; j <= 9; j++) {
                if (tablero.getTablero()[i - 1][j - 1].getColor() == "Rojo") {
                    botones[i][j].setBackground(Color.RED);
                } else if (tablero.getTablero()[i - 1][j - 1].getColor() == "Azul") {
                    botones[i][j].setBackground(Color.BLUE);
                } else {
                    botones[i][j].setBackground(Color.GRAY);
                }
                if (tablero.getTablero()[i - 1][j - 1].getValor() != 0) {
                    botones[i][j].setText(Integer.toString(tablero.getTablero()[i - 1][j - 1].getValor()));
                }
                if (tablero.getTablero()[i - 1][j - 1].getValor() == 0) {
                    botones[i][j].setText("");
                }

            }
        }
    }

    public String jugada(int[] posV, int[] posN) {
        if (tablero.getTablero()[posV[0]][posV[1]].getColor().equals("Rojo")) {
            if (posN[0] == posV[0] - 1 && posN[1] == posV[1]) {
                return Integer.toString(posV[1]) + "A";
            } else if (posN[0] == posV[0] - 1 && posN[1] == posV[1] + 1) {
                return Integer.toString(posV[1]) + "D";
            } else if (posN[0] == posV[0] - 1 && posN[1] == posV[1] - 1) {
                return Integer.toString(posV[1]) + "I";
            } else {
                return "NO";
            }
        }
        if (tablero.getTablero()[posV[0]][posV[1]].getValor()== 0){
            return "cero";
        }
        return "cero";
    }

}
